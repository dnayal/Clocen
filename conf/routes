# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           	controllers.Application.index()
GET		/register						controllers.Application.getRegistrationForm()
GET		/profile						controllers.Application.getUserProfilePage()
GET		/password/:requestType			controllers.Application.getForgotAndResetPasswordPage(requestType: String)
POST	/triggers/:node_id				controllers.Application.callTriggerListener(node_id: String)

GET		/app/process/new						controllers.Application.viewCreateProcess()
POST	/app/process/new						controllers.Application.saveProcess()
GET		/app/process/view/:processId			controllers.Application.viewProcess(processId: String)
GET		/app/process/pause/:processId			controllers.Application.pauseProcess(processId: String)
GET		/app/process/delete/:processId			controllers.Application.deleteProcess(processId: String)
GET		/processes/:processId					controllers.ProcessController.getProcess(processId: String)
GET		/processes/users/:userId				controllers.ProcessController.getAllProcessesForUser(userId: String)
POST	/processes/:processId/delete/:userId	controllers.ProcessController.deleteProcess(processId: String, userId: String)
POST	/processes/:processId/pause/:userId		controllers.ProcessController.pauseProcess(processId: String, userId: String)
POST	/processes/new/create/:userId			controllers.ProcessController.saveProcess(userId: String)

GET		/app/nodes/all							controllers.Application.getAllNodes()
GET		/app/node/:nodeId						controllers.Application.getNode(nodeId: String)
GET		/app/node/:nodeId/:service				controllers.Application.getNodeService(nodeId: String, service: String)
GET		/nodes/all/:userId						controllers.NodeController.getAllNodes(userId: String)
GET		/nodes/:nodeId/reflection				controllers.NodeController.getNodeConfiguration(nodeId: String)
GET		/nodes/:nodeId/reflection/:userId/:service		controllers.NodeController.callNodeInfoService(userId: String, nodeId: String, service: String)

GET		/app/oauth2/authorize/:nodeId				controllers.Application.authorizeOauth2Call(nodeId: String)
GET		/app/oauth2/callback/:nodeId				controllers.Application.oauth2TokenCallback(nodeId: String)
GET		/app/oauth2/refresh/:nodeId					controllers.Application.refreshOauth2Token(nodeId: String)
GET		/nodes/:nodeId/authorize/:userId/oauth2		controllers.OAuth2Controller.authorizeCall(userId: String, nodeId: String)
POST	/nodes/:nodeId/callback/:userId/oauth2		controllers.OAuth2Controller.tokenCallback(userId: String, nodeId: String)
POST	/nodes/:nodeId/refresh/:userId/oauth2		controllers.OAuth2Controller.refreshToken(userId: String, nodeId: String)

POST	/users/login					controllers.UserController.login()
POST	/users/signup					controllers.UserController.signup()
POST    /users/register					controllers.UserController.register()
POST	/user/password/forgot			controllers.UserController.forgotPassword()
POST	/user/password/reset			controllers.UserController.passwordReset()
POST	/users/profile/:userId			controllers.UserController.updateProfile(userId: String)
GET		/users/logout					controllers.UserController.logout()

GET		/admin/betausers/all			controllers.AdminController.showBetaUsers()
GET		/admin/betausers/invite/:email	controllers.AdminController.inviteBetaUser(email: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               	controllers.Assets.at(path="/public", file)
